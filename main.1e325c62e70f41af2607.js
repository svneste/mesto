!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var n=function(){function n(e,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t(this,"_setEventListeners",(function(){o._inputList=Array.from(o._formElement.querySelectorAll(o._inputSelector)),o._submitButtonElement=o._formElement.querySelector(o._submitButtonSelector),o.toggleButtonState(),o._inputList.forEach((function(e){e.addEventListener("input",(function(){o._isValid(e),o.toggleButtonState()}))}))})),t(this,"_isValid",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),t(this,"_showInputError",(function(e,t){o._formElement.querySelector(".".concat(e.id,"-error")).textContent=t,e.classList.add(o._inputErrorClass)})),t(this,"_hideInputError",(function(e){o._formElement.querySelector(".".concat(e.id,"-error")).textContent="",e.classList.remove(o._inputErrorClass)})),t(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),t(this,"toggleButtonState",(function(){o._hasInvalidInput()?(o._submitButtonElement.classList.add(o._buttonInvalid),o._submitButtonElement.disabled=!0):(o._submitButtonElement.classList.remove(o._buttonInvalid),o._submitButtonElement.disabled=!1)})),this._config=e,this._inputSelector=e.inputSelector,this._buttonInvalid=e.buttonInvalid,this._submitButtonSelector=e.submitButtonSelector,this._inputErrorClass=e.inputErrorClass,this._formElement=r}var r,o;return r=n,(o=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&e(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){var r,o,i=this,a=t.data,u=t.userID,c=t.handleCardClick,l=t.handlePopupDeleteOpen,s=t.handleLikeCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._element.remove(),i._element=null},(r="removeCard")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this.liked=!1,a.likes.forEach((function(e){e._id===u&&(i.liked=!0)})),this._userID=u,this._data=a,this._name=a.name,this._link=a.link,this._like=a.likes.length,this._owner=a.owner,this._cardSelector=n,this._handleCardClick=c,this._id=a._id,this._handlePopupDeleteOpen=l,this._handleLikeCard=s}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".gallery__item").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".gallery__images"),this._likeButton=this._element.querySelector(".gallery__like-button"),this._cardTitle=this._element.querySelector(".gallery__title"),this._placeLike=this._element.querySelector(".gallery__like-count"),this._removeIcon=this._element.querySelector(".gallery__crash-button"),this._setEventListener(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._placeLike.textContent=this._like,this.liked&&this._likeButton.classList.add("gallery__like-button-active"),this._owner._id==this._userID&&this._removeIcon.classList.add("gallery__crash-button-owner"),this._element}},{key:"_setEventListener",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._toggleLike()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._removeIcon.addEventListener("click",(function(){e._handlePopupDeleteOpen(e)}))}},{key:"_toggleLike",value:function(){this._likeButton.classList.toggle("gallery__like-button-active"),this._handleLikeCard()}},{key:"setLikes",value:function(e){this._like=e,this._placeLike.textContent=this._like}},{key:"likeStatus",value:function(){this.liked=!this.liked}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"rendererItems",value:function(e){this._renderer(e)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup__opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup__opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup__opened")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).img=t._popup.querySelector(".popup__img"),t.label=t._popup.querySelector(".popup__label"),t}return t=a,(n=[{key:"open",value:function(e,t){this.img.src=t,this.img.alt=e,this.label.textContent=e,f(y(a.prototype),"open",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return S(e)}function S(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){e.preventDefault(),n._handleFormSubmit(n._getInputValues())},(o="_submitForm")in(r=S(n=i.call(this,e)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._form=n._popup.querySelector(".form"),n._inputs=n._form.querySelectorAll(".form__field"),n._handleFormSubmit=t,n._button=n._form.querySelector(".form__button"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputs.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){v(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitForm)}},{key:"close",value:function(){v(E(a.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoading",value:function(e){this._button.innerText=e?"Сохранение ...":"Сохранить"}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n,r){var o,i,a=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i=function(){return a._data={name:a._name.textContent,job:a._job.textContent},a._data},(o="getUserInfo")in this?Object.defineProperty(this,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[o]=i,this._name=document.querySelector(t),this._job=document.querySelector(n),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._job.textContent=t}},{key:"setAvatarUser",value:function(e){this._avatar.style.backgroundImage="url('".concat(e,"')")}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkSuccessRequest",value:function(e){return e.ok?e.json():Promise.reject("Запрос отработал с ошибкой - ".concat(e.status))}},{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"editUserProfile",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkSuccessRequest)}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkSuccessRequest)}},{key:"removeMyCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"changeAvatarUser",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkSuccessRequest)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=T(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(this,arguments)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function B(e,t){return B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},B(e,t)}function D(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return A(e)}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return D(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){e.preventDefault(),n._handleDeleteCard(n._card)},(o="_submitFormDelete")in(r=A(n=i.call(this,e)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._form=n._popup.querySelector(".form-delete"),n._buttonPopupDeleteCard=n._form.querySelector(".form__button-delete"),n._handleDeleteCard=t,n}return t=a,(n=[{key:"open",value:function(e){this._card=e,R(x(a.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){R(x(a.prototype),"setEventListeners",this).call(this),this._buttonPopupDeleteCard.addEventListener("click",this._submitFormDelete)}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c),V=document.querySelector(".profile__button-edit"),F=document.querySelector(".profile__button-add"),N=document.querySelector(".form-edit"),M=document.querySelector(".form-add"),J=document.querySelector("#name"),G=document.querySelector("#description"),H=document.querySelector(".profile__avatar"),z=document.querySelector(".form-avatar"),$=document.querySelector(".gallery__items"),K={inputSelector:".form__field",submitButtonSelector:".form__button",buttonInvalid:"form__button-invalid",inputErrorClass:"form__input_type_error"};function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var W=new n(K,N);W.enableValidation();var X=new n(K,M);X.enableValidation();var Y=new n(K,z);Y.enableValidation();var Z=new j(".profile__title",".profile__description",".profile__avatar"),ee=new O(".popup-edit",(function(e){ee.renderLoading(!0),re.editUserProfile(e.name,e.description).then((function(e){Z.setUserInfo(e.name,e.about),ee.close()})).catch((function(e){console.log(e)})).finally((function(){ee.renderLoading(!1)}))}));ee.setEventListeners();var te=new _(".popup-image");te.setEventListeners(),V.addEventListener("click",(function(){var e=Z.getUserInfo();J.value=e.name,G.value=e.job,W.resetValidation(),ee.open()}));var ne=new O(".popup-avatar",(function(e){ne.renderLoading(!0),re.changeAvatarUser(e.link).then((function(e){Z.setAvatarUser(e.avatar),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.renderLoading(!1)}))}));ne.setEventListeners(),H.addEventListener("click",(function(){Y.resetValidation(),ne.open(),Y.toggleButtonState()}));var re=new C({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{Authorization:"52b38323-31d5-410e-bc4e-08f257105694","content-type":"application/json"}});Promise.all([re.getUserInfo(),re.getAllCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Q(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[0],u=r[1];Z.setUserInfo(i.name,i.about),Z.setAvatarUser(i.avatar);var c=new a({renderer:function(e){e.forEach((function(e){$.append(l(e))}))}},".gallery__items");function l(e){var t=new o({data:e,userID:i._id,handleCardClick:function(e,t){te.open(e,t)},handlePopupDeleteOpen:function(e){oe.open(e)},handleLikeCard:function(){t.liked?re.deleteLike(t._id).then((function(e){t.setLikes(e.likes.length),t.likeStatus()})).catch((function(e){console.log(e)})):re.addLike(t._id).then((function(e){t.setLikes(e.likes.length),t.likeStatus()})).catch((function(e){console.log(e)}))}},".gallery-template");return t.generateCard()}c.rendererItems(u);var s=new O(".popup-add",(function(e){s.renderLoading(!0),re.addNewCard(e.name,e.link).then((function(e){c.addItem(l(e)),s.close(),X.toggleButtonState()})).catch((function(e){console.log(e)})).finally((function(){s.renderLoading(!1)}))}));s.setEventListeners(),F.addEventListener("click",(function(){X.resetValidation(),s.open()}))}));var oe=new U(".popup-delete",(function(e){re.removeMyCard(e._id).then((function(){e.removeCard(),oe.close()})).catch((function(e){console.log(e)}))}));oe.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,