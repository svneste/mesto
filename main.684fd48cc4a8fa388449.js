!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var n=function(){function n(e,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t(this,"_setEventListeners",(function(){o._inputList=Array.from(o._formElement.querySelectorAll(o._inputSelector)),o._submitButtonElement=o._formElement.querySelector(o._submitButtonSelector),o.toggleButtonState(),o._inputList.forEach((function(e){e.addEventListener("input",(function(){o._isValid(e),o.toggleButtonState()}))}))})),t(this,"_isValid",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),t(this,"_showInputError",(function(e,t){o._formElement.querySelector(".".concat(e.id,"-error")).textContent=t,e.classList.add(o._inputErrorClass)})),t(this,"_hideInputError",(function(e){o._formElement.querySelector(".".concat(e.id,"-error")).textContent="",e.classList.remove(o._inputErrorClass)})),t(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),t(this,"toggleButtonState",(function(){o._hasInvalidInput()?(o._submitButtonElement.classList.add(o._buttonInvalid),o._submitButtonElement.disabled=!0):(o._submitButtonElement.classList.remove(o._buttonInvalid),o._submitButtonElement.disabled=!1)})),this._config=e,this._inputSelector=e.inputSelector,this._buttonInvalid=e.buttonInvalid,this._submitButtonSelector=e.submitButtonSelector,this._inputErrorClass=e.inputErrorClass,this._formElement=r}var r,o;return r=n,(o=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&e(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){var r,o,i=this,a=t.data,c=t.handleCardClick,u=t.handlePopupDeleteOpen,l=t.handleLikeCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._element.remove(),i._element=null},(r="_removeCard")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._liked=!1,a.likes.forEach((function(e){"8a1356d4c0c2936a4b94e3a4"===e._id&&(i._liked=!0)})),this._data=a,this._name=a.name,this._link=a.link,this._like=a.likes.length,this._owner=a.owner,this._cardSelector=n,this._handleCardClick=c,this._id=a._id,this._handlePopupDeleteOpen=u,this._handleLikeCard=l}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".gallery__item").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".gallery__images"),this._likeButton=this._element.querySelector(".gallery__like-button"),this._cardTitle=this._element.querySelector(".gallery__title"),this._placeLike=this._element.querySelector(".gallery__like-count"),this._removeIcon=this._element.querySelector(".gallery__crash-button"),this._setEventListener(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._placeLike.textContent=this._like,this._liked&&this._likeButton.classList.add("gallery__like-button-active"),"8a1356d4c0c2936a4b94e3a4"==this._owner._id&&this._removeIcon.classList.add("gallery__crash-button-owner"),this._element}},{key:"_setEventListener",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._toggleLike()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._removeIcon.addEventListener("click",(function(){e._handlePopupDeleteOpen(e)}))}},{key:"_toggleLike",value:function(){this._likeButton.classList.toggle("gallery__like-button-active"),this._handleLikeCard()}},{key:"setLikes",value:function(e){this._like=e,this._placeLike.textContent=this._like}},{key:"likeStatus",value:function(){this._liked=!this._liked}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r,o,i=this,a=t.items,c=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._initialArray.forEach((function(e){i._renderer(e)}))},(r="rendererItems")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._initialArray=a,this._renderer=c,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"addIconRemove",value:function(){this._iconPlace=this._container.querySelector(".gallery__crash-button")}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(){o.close()},(n="_handleButtonClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup__opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup__opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup__opened")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function d(e,t){return d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},d(e,t)}function h(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).img=t._popup.querySelector(".popup__img"),t.label=t._popup.querySelector(".popup__label"),t}return t=a,(n=[{key:"open",value:function(e,t){this.img.src=t,this.img.alt=e,this.label.textContent=e,f(y(a.prototype),"open",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return S(e)}function S(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n,r,o,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),c=function(e){e.preventDefault(),n._handleFormSubmit(n._getInputValues()),n.close()},(o="_submitForm")in(r=S(n=i.call(this,e)))?Object.defineProperty(r,o,{value:c,enumerable:!0,configurable:!0,writable:!0}):r[o]=c,n._form=n._popup.querySelector(".form"),n._inputs=n._form.querySelectorAll(".form__field"),n._handleFormSubmit=t,n._button=n._form.querySelector(".form__button"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputs.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){v(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitForm)}},{key:"close",value:function(){v(E(a.prototype),"close",this).call(this),this._form.reset()}},{key:"loadingProcess",value:function(e){this._button.innerText=e?"Сохранение ...":"Сохранить"}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n,r){var o,i,a=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i=function(){return a._data={name:a._name.textContent,job:a._job.textContent},a._data},(o="getUserInfo")in this?Object.defineProperty(this,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[o]=i,this._name=document.querySelector(t),this._job=document.querySelector(n),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._job.textContent=t}},{key:"setAvatarUser",value:function(e){this._avatar.style.backgroundImage="url('".concat(e,"')")}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkSuccessRequest",value:function(e){return e.ok?e.json():Promise.reject("Запрос отработал с ошибкой - ".concat(e.status))}},{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"editUserProfile",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkSuccessRequest)}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkSuccessRequest)}},{key:"removeMyCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkSuccessRequest)}},{key:"changeAvatarUser",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkSuccessRequest)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=T(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(this,arguments)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}function x(e,t){return x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},x(e,t)}function B(e,t){if(t&&("object"===q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return D(e)}function D(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e,t){var n,r,o,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),c=function(e){e.preventDefault(),n._handleDeleteCard(n._card),console.log(n._card),n.close()},(o="_submitFormDelete")in(r=D(n=i.call(this,e)))?Object.defineProperty(r,o,{value:c,enumerable:!0,configurable:!0,writable:!0}):r[o]=c,n._form=n._popup.querySelector(".form-delete"),n._buttonPopupDeleteCard=n._form.querySelector(".form__button-delete"),n._handleDeleteCard=t,n}return t=a,(n=[{key:"open",value:function(e){this._card=e,R(A(a.prototype),"open",this).call(this),this.setEventListeners()}},{key:"setEventListeners",value:function(){R(A(a.prototype),"setEventListeners",this).call(this),console.log(this._buttonPopupDeleteCard),this._buttonPopupDeleteCard.addEventListener("click",this._submitFormDelete)}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function V(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var F=document.querySelector(".profile__button-edit"),N=document.querySelector(".profile__button-add"),M=document.querySelector(".form-edit"),J=document.querySelector(".form-add"),z=document.querySelector("#name"),G=document.querySelector("#description"),H=document.querySelector(".profile__title"),$=document.querySelector(".profile__description"),K=document.querySelector(".profile__avatar"),Q=document.querySelector(".form-avatar"),W={inputSelector:".form__field",submitButtonSelector:".form__button",buttonInvalid:"form__button-invalid",inputErrorClass:"form__input_type_error"};new n(W,M).enableValidation();var X=new n(W,J);X.enableValidation(),new n(W,Q).enableValidation();var Y=new j(".profile__title",".profile__description",".profile__avatar"),Z=new O(".popup-edit",(function(e){Z.loadingProcess(!0),ie.editUserProfile(e.name,e.description).then((function(e){Y.setUserInfo(e.name,e.about)})).catch((function(e){console.log(e)})).finally((function(){Z.loadingProcess(!1)}))}));Z.setEventListeners();var ee=new a({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){var t=re(e);cardList.addItem(t)}},".gallery__items"),te=new O(".popup-add",(function(e){te.loadingProcess(),ie.addNewCard(e.name,e.link).then((function(e){ee.addItem(re(e))})).catch((function(e){console.log(e)})).finally((function(){te.loadingProcess(!1)}))}));te.setEventListeners();var ne=new _(".popup-image");function re(e){var t=new o({data:e,handleCardClick:function(e,n){ne.open(e,n),console.log(t)},handlePopupDeleteOpen:function(e){ae.open(e)},handleLikeCard:function(){t._liked?ie.deleteLike(t._id).then((function(e){t.setLikes(e.likes.length),t.likeStatus()})):ie.addLike(t._id).then((function(e){t.setLikes(e.likes.length),t.likeStatus()}))}},".gallery-template");return t.generateCard()}ne.setEventListeners(),F.addEventListener("click",(function(){var e=Y.getUserInfo();z.value=e.name,G.value=e.job,Z.open()})),N.addEventListener("click",(function(){X.enableValidation(),te.open()}));var oe=new O(".popup-avatar",(function(e){oe.loadingProcess(!0),ie.changeAvatarUser(e.link).then((function(e){Y.setAvatarUser(e.avatar),oe.close()})).catch((function(e){console.log(e)})).finally((function(){oe.loadingProcess(!1)}))}));oe.setEventListeners(),K.addEventListener("click",(function(){oe.open()}));var ie=new L({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{Authorization:"52b38323-31d5-410e-bc4e-08f257105694","content-type":"application/json"}});Promise.all([ie.getUserInfo(),ie.getAllCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return V(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?V(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];H.textContent=o.name,$.textContent=o.about,K.style.backgroundImage="url('".concat(o.avatar,"')");var c=new a({items:i,renderer:function(e){var t=re(e);c.addIconRemove(),c.addItem(t)}},".gallery__items");c.rendererItems()}));var ae=new U(".popup-delete",(function(e){ie.removeMyCard(e._id).then((function(){e._removeCard()})).catch((function(e){console.log(e)})).finally((function(){oe.loadingProcess(!1)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,